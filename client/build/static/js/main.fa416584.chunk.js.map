{"version":3,"sources":["components/Navbar/index.js","components/Header/index.js","components/Form/index.js","utils/API.js","pages/search.js","components/SearchResults/index.js","components/Container/index.js","pages/saved.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","href","Header","form","props","id","htmlFor","type","name","onChange","e","handleChange","placeholder","required","onClick","handleSearchClick","API","getBooks","axios","get","searchBooks","title","post","saveBookToDB","bookData","deleteBook","delete","concat","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bookInput","bind","assertThisInitialized","preventDefault","setState","target","value","_this2","api","then","response","data","length","path","match","React","Component","SearchResult","handleSaveClick","saved","authors","link","img","description","addBookToDB","console","log","catch","err","deleted","handleDeleteClick","Router","dispatch","location","className","style","display","join","rel","disabled","src","smallThumbnail","thumbnail","alt","Container","map","book","bookInfo","volumeInfo","SearchResults","canonicalVolumeLink","imageLinks","key","savedBooks","_id","Saved","components_Container","App","react_router_dom","components_Navbar","components_Header","Form","react_router","exact","component","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa416584.chunk.js","sourcesContent":["import React from \"react\";\n\n\nfunction Navbar() {\n    return (\n        <nav>\n            <h2> Google Books Search</h2>\n            <a href=\"/\">Search Books</a>\n            <a href=\"./saved\">Saved Books</a>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React from \"react\";\n\n\n\n\nfunction Header() {\n    return (\n        <header>\n            <h1>Books Search App</h1>\n            <p>Search for your favorire books and save them here for later\n                viewing.\n            </p>\n            \n        </header>\n    );\n}\n\nexport default Header;","import React from \"react\";\n\nfunction form(props) {\n    return(\n        <div id=\"searchContainer\">\n            <h3>Search books</h3>\n            <form id=\"searchBooks\">\n                <label htmlFor=\"bookInput\" form=\"searchBooks\">Enter a book tittle to search:</label>\n                <br></br>\n                <input type=\"text\" name=\"bookInput\" id=\"bookInput\" form=\"searchBooks\" onChange={(e) => props.handleChange(e)} placeholder=\"Insert Book Title here\" required/>\n                <br></br>\n                <button type=\"submit\" onClick={(e) => props.handleSearchClick(e)}>Search</button>\n            </form>\n        </div>\n    );\n}\n\nexport default form;","import axios from \"axios\";\n\nexport default {\n    getBooks: () => {\n        return axios.get(\"/api/books\");\n    },\n    searchBooks: (title) => {\n        return axios.post(\"/search\", {title: title});\n    },\n    saveBookToDB: (bookData) => {\n        return axios.post(\"/api/books\", bookData);\n    },\n    deleteBook: (id) => {\n        return axios.delete(`/api/books/${id}`);\n    }\n}\n\n\n","import React from \"react\";\nimport api from \"../utils/API\"\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookInput: \"\",\n            bookData: []\n        }\n\n        this.handleSearchClick = this.handleSearchClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        this.setState({bookInput: e.target.value})\n    }\n\n    handleSearchClick(e) {\n        e.preventDefault();\n        api.searchBooks(this.state.bookInput)\n            .then(\n                (response) => {\n                    this.setState({bookData: response.data});\n                    this.setState({bookInput: \"\"});\n                }\n            );\n    }\n\n    render() {\n        return(\n            <main>\n                <form handleChange={this.handleChange} handleSearchClick={this.handleSearchClick} />\n                {(this.state.bookData.length > 0)?\n                    <container bookData={this.state.bookData} path={this.props.match.path}/> : null\n                }\n            </main>\n        );\n    }\n}\n\nexport default Search;\n","import React from \"react\";\nimport API from \"../../utils/API\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nclass SearchResult extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            saved: false,\n            deleted: false\n        }\n        this.handleSaveClick = this.handleSaveClick.bind(this);\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    }\n\n    handleSaveClick = function(e) {\n        this.setState({saved: true});\n        const bookData = {\n            title: this.props.title,\n            authors: this.props.authors,\n            link: this.props.link,\n            img: this.props.img,\n            description: this.props.description\n        }\n        e.preventDefault();\n        API.addBookToDB(bookData).then(\n            (response) => {\n                console.log(response);\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    handleDeleteClick(e) {\n        this.setState({deleted: true});\n        e.preventDefault();\n        API.deleteBook(this.props.id).then(\n            (response) => {\n                console.log(response);\n                Router.dispatch(this.props.location, null)\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    render() {\n        return(\n            <div className=\"bookResult\" id={(this.props.id)? this.props.id: null} style={{display: this.state.deleted? \"none\" : \"block\"}}>\n                <div className=\"row\">\n                    <div className=\"aboutBook\">\n                        <h4>{this.props.title}</h4>\n                        <p>By: {(this.props.authors)? this.props.authors.join(\", \"): \"N/A\"}</p>\n                    </div>\n                    <div className=\"btnDiv\">\n                        {\n                            // if link to book exists include View button else do not\n                            (this.props.link)? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\"><button type=\"button\" name=\"view\">View</button></a> : null\n                        }\n                        {\n                            // if this.props.path is \"/\" display save button else display Delete button\n                            (this.props.path === \"/\")? <button type=\"button\" name=\"save\" onClick={this.handleSaveClick} disabled={this.state.saved}>{(this.state.saved)? \"Saved\" : \"Save\"}</button> : <button type=\"button\" name=\"Delete\" onClick={this.handleDeleteClick} disabled={this.state.deleted}>Delete</button>\n                        }\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {(this.props.img)? <img src= {\n                        // if smallthubmail exists on this.props.img use that else if thumbnail exists on this.props.img use that else leave src empty\n                        (this.props.img.smallThumbnail)? this.props.img.smallThumbnail:\n                        (this.props.img.thumbnail)? this.props.img.thumbnail: \"\"\n                    } alt=\"book cover\"/>: null}\n                    <p>{(this.props.description)? this.props.description: \"N/A\"}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchResult;\n\n        ","import React from \"react\";\nimport SearchResults from \"../SearchResults\";\n\nfunction Container(props) {\n    if(props.path === \"/\") {\n        return(\n            <div id=\"Container\">\n                <h3>Results Found</h3>\n                {props.bookData.map((book) => {\n                    const bookInfo = book.volumeInfo;\n                    return <SearchResults\n                    title={bookInfo.title}\n                    authors={bookInfo.authors}\n                    description={bookInfo.description}\n                    link={bookInfo.canonicalVolumeLink}\n                    img={bookInfo.imageLinks}\n                    path={props.path}\n                    key={book.id}/>\n                })}\n            </div>\n        );\n    } else if(props.path === \"/saved\") {\n        if(props.savedBooks.length > 0) {\n            return(\n                <div id=\"Container\">\n                    <h3>Saved Books</h3>\n                    {props.savedBooks.map((book) => {\n                        return <SearchResults\n                        title={book.title}\n                        authors={book.authors}\n                        description={book.description}\n                        link={book.link}\n                        img={book.img}\n                        id={book._id}\n                        path={props.path}\n                        key={book._id}/>\n                    })}\n                </div>\n            );\n        } else {\n            return(\n                 <div id=\"Container\">\n                    <h3>Saved Books</h3>\n                    <p>No saved books.</p>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Container;","import React from \"react\";\nimport Container from \"../components/Container\";\nimport API from \"../utils/API\";\n\nclass Saved extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            savedBooks: []\n        }\n    }\n\n    componentWillMount() {\n        API.getBooks().then(\n            (response) => {\n                this.setState({savedBooks: response.data});\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    render() {\n        console.log(this.state.savedBooks);\n        return(\n            <main>\n                <Container savedBooks={this.state.savedBooks} path={this.props.match.path}/>\n            </main>\n        );\n    }\n}\n\nexport default Saved;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/index\";\nimport Header from \"./components/Header/index\";\nimport Form from \"./components/Form/index\";\nimport Search from \"./pages/search\";\nimport Saved from \"./pages/saved\"\n\n\nclass App extends Component {\n  render() {\n    return (\n    <Router>\n      <div>\n        <Navbar />\n        <Header />\n       <Form />\n       <Switch>\n       <Route exact path=\"/\" component={Search}/> */}\n       <Route path=\"/Saved\" component={Saved}/>\n        </Switch>\n       \n      \n      </div>\n     </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}